// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.20.1
// 	protoc        v3.11.4
// source: LogStream.proto

package logstream

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ReadRequest_Direction int32

const (
	ReadRequest_FORWARD  ReadRequest_Direction = 0
	ReadRequest_BACKWARD ReadRequest_Direction = 1
)

// Enum value maps for ReadRequest_Direction.
var (
	ReadRequest_Direction_name = map[int32]string{
		0: "FORWARD",
		1: "BACKWARD",
	}
	ReadRequest_Direction_value = map[string]int32{
		"FORWARD":  0,
		"BACKWARD": 1,
	}
)

func (x ReadRequest_Direction) Enum() *ReadRequest_Direction {
	p := new(ReadRequest_Direction)
	*p = x
	return p
}

func (x ReadRequest_Direction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReadRequest_Direction) Descriptor() protoreflect.EnumDescriptor {
	return file_LogStream_proto_enumTypes[0].Descriptor()
}

func (ReadRequest_Direction) Type() protoreflect.EnumType {
	return &file_LogStream_proto_enumTypes[0]
}

func (x ReadRequest_Direction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReadRequest_Direction.Descriptor instead.
func (ReadRequest_Direction) EnumDescriptor() ([]byte, []int) {
	return file_LogStream_proto_rawDescGZIP(), []int{0, 0}
}

type ReadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File          string                `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	Direction     ReadRequest_Direction `protobuf:"varint,2,opt,name=direction,proto3,enum=logstream.ReadRequest_Direction" json:"direction,omitempty"`
	Bytes         int64                 `protobuf:"varint,3,opt,name=bytes,proto3" json:"bytes,omitempty"`
	ForwardIndex  int64                 `protobuf:"varint,4,opt,name=forwardIndex,proto3" json:"forwardIndex,omitempty"`
	BackwardIndex int64                 `protobuf:"varint,5,opt,name=backwardIndex,proto3" json:"backwardIndex,omitempty"`
}

func (x *ReadRequest) Reset() {
	*x = ReadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_LogStream_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadRequest) ProtoMessage() {}

func (x *ReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_LogStream_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadRequest.ProtoReflect.Descriptor instead.
func (*ReadRequest) Descriptor() ([]byte, []int) {
	return file_LogStream_proto_rawDescGZIP(), []int{0}
}

func (x *ReadRequest) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

func (x *ReadRequest) GetDirection() ReadRequest_Direction {
	if x != nil {
		return x.Direction
	}
	return ReadRequest_FORWARD
}

func (x *ReadRequest) GetBytes() int64 {
	if x != nil {
		return x.Bytes
	}
	return 0
}

func (x *ReadRequest) GetForwardIndex() int64 {
	if x != nil {
		return x.ForwardIndex
	}
	return 0
}

func (x *ReadRequest) GetBackwardIndex() int64 {
	if x != nil {
		return x.BackwardIndex
	}
	return 0
}

type LogLines struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Logs          string `protobuf:"bytes,1,opt,name=logs,proto3" json:"logs,omitempty"`
	ForwardIndex  int64  `protobuf:"varint,2,opt,name=forwardIndex,proto3" json:"forwardIndex,omitempty"`
	BackwardIndex int64  `protobuf:"varint,3,opt,name=backwardIndex,proto3" json:"backwardIndex,omitempty"`
}

func (x *LogLines) Reset() {
	*x = LogLines{}
	if protoimpl.UnsafeEnabled {
		mi := &file_LogStream_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogLines) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogLines) ProtoMessage() {}

func (x *LogLines) ProtoReflect() protoreflect.Message {
	mi := &file_LogStream_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogLines.ProtoReflect.Descriptor instead.
func (*LogLines) Descriptor() ([]byte, []int) {
	return file_LogStream_proto_rawDescGZIP(), []int{1}
}

func (x *LogLines) GetLogs() string {
	if x != nil {
		return x.Logs
	}
	return ""
}

func (x *LogLines) GetForwardIndex() int64 {
	if x != nil {
		return x.ForwardIndex
	}
	return 0
}

func (x *LogLines) GetBackwardIndex() int64 {
	if x != nil {
		return x.BackwardIndex
	}
	return 0
}

var File_LogStream_proto protoreflect.FileDescriptor

var file_LogStream_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x4c, 0x6f, 0x67, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x6c, 0x6f, 0x67, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x22, 0xe9, 0x01, 0x0a,
	0x0b, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x66, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65,
	0x12, 0x3e, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x6c, 0x6f, 0x67, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e,
	0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x66, 0x6f,
	0x72, 0x77, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x61,
	0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x62, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x22, 0x26, 0x0a, 0x09, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0b, 0x0a,
	0x07, 0x46, 0x4f, 0x52, 0x57, 0x41, 0x52, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x42, 0x41,
	0x43, 0x4b, 0x57, 0x41, 0x52, 0x44, 0x10, 0x01, 0x22, 0x68, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x4c,
	0x69, 0x6e, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x6f, 0x72, 0x77,
	0x61, 0x72, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x24, 0x0a, 0x0d,
	0x62, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x62, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x32, 0x42, 0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12,
	0x35, 0x0a, 0x04, 0x52, 0x65, 0x61, 0x64, 0x12, 0x16, 0x2e, 0x6c, 0x6f, 0x67, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x13, 0x2e, 0x6c, 0x6f, 0x67, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x2e, 0x4c, 0x6f, 0x67, 0x4c,
	0x69, 0x6e, 0x65, 0x73, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x3b, 0x6c, 0x6f, 0x67, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_LogStream_proto_rawDescOnce sync.Once
	file_LogStream_proto_rawDescData = file_LogStream_proto_rawDesc
)

func file_LogStream_proto_rawDescGZIP() []byte {
	file_LogStream_proto_rawDescOnce.Do(func() {
		file_LogStream_proto_rawDescData = protoimpl.X.CompressGZIP(file_LogStream_proto_rawDescData)
	})
	return file_LogStream_proto_rawDescData
}

var file_LogStream_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_LogStream_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_LogStream_proto_goTypes = []interface{}{
	(ReadRequest_Direction)(0), // 0: logstream.ReadRequest.Direction
	(*ReadRequest)(nil),        // 1: logstream.ReadRequest
	(*LogLines)(nil),           // 2: logstream.LogLines
}
var file_LogStream_proto_depIdxs = []int32{
	0, // 0: logstream.ReadRequest.direction:type_name -> logstream.ReadRequest.Direction
	1, // 1: logstream.LogStream.Read:input_type -> logstream.ReadRequest
	2, // 2: logstream.LogStream.Read:output_type -> logstream.LogLines
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_LogStream_proto_init() }
func file_LogStream_proto_init() {
	if File_LogStream_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_LogStream_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_LogStream_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogLines); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_LogStream_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_LogStream_proto_goTypes,
		DependencyIndexes: file_LogStream_proto_depIdxs,
		EnumInfos:         file_LogStream_proto_enumTypes,
		MessageInfos:      file_LogStream_proto_msgTypes,
	}.Build()
	File_LogStream_proto = out.File
	file_LogStream_proto_rawDesc = nil
	file_LogStream_proto_goTypes = nil
	file_LogStream_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LogStreamClient is the client API for LogStream service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LogStreamClient interface {
	Read(ctx context.Context, in *ReadRequest, opts ...grpc.CallOption) (*LogLines, error)
}

type logStreamClient struct {
	cc grpc.ClientConnInterface
}

func NewLogStreamClient(cc grpc.ClientConnInterface) LogStreamClient {
	return &logStreamClient{cc}
}

func (c *logStreamClient) Read(ctx context.Context, in *ReadRequest, opts ...grpc.CallOption) (*LogLines, error) {
	out := new(LogLines)
	err := c.cc.Invoke(ctx, "/logstream.LogStream/Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LogStreamServer is the server API for LogStream service.
type LogStreamServer interface {
	Read(context.Context, *ReadRequest) (*LogLines, error)
}

// UnimplementedLogStreamServer can be embedded to have forward compatible implementations.
type UnimplementedLogStreamServer struct {
}

func (*UnimplementedLogStreamServer) Read(context.Context, *ReadRequest) (*LogLines, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Read not implemented")
}

func RegisterLogStreamServer(s *grpc.Server, srv LogStreamServer) {
	s.RegisterService(&_LogStream_serviceDesc, srv)
}

func _LogStream_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogStreamServer).Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/logstream.LogStream/Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogStreamServer).Read(ctx, req.(*ReadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LogStream_serviceDesc = grpc.ServiceDesc{
	ServiceName: "logstream.LogStream",
	HandlerType: (*LogStreamServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Read",
			Handler:    _LogStream_Read_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "LogStream.proto",
}
